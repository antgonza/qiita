name: qiita-private-api CI

on:
  push:
    branches: [ dev ]
  pull_request:

jobs:
  # derived from https://github.com/actions/example-services/blob/master/.github/workflows/postgres-service.yml
  qiita-ci-runner-job:
    runs-on: ubuntu-latest

    # Service containers to run with `runner-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:9.5
        env:
          POSTGRES_DB: qiita_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres

        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # based on https://github.com/actions/example-services/blob/master/.github/workflows/postgres-service.yml#L44-L72
          - 5432/tcp

    steps:
      # Downloads a copy of the code in your repository before running CI tests
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Setup for conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: 3.6

      - name: Basic dependencies install
        shell: bash -l {0}
        run: |
          # pull out the port so we can modify the configuration file easily
          # pgport=${{ job.services.postgres.ports[5432] }}
          # sed -i "s/self.port = 5432/self.port = $pgport/" [conf.file]

          # PGPASSWORD is read by pg_restore, which is called by the build_db process.
          export PGPASSWORD=postgres

          # Setting up main qiita conda environment
          conda config --add channels conda-forge
          conda create -q --yes -n qiita python=3.6 pip libgfortran numpy nginx cython redis
          conda activate qiita
          pip install sphinx sphinx-bootstrap-theme nose-timer codecov Click

      - name: Webdis install
        shell: bash -l {0}
        run: |
          sudo apt-get -y install libevent-dev
          git clone https://github.com/nicolasff/webdis
          cd webdis
          make

      - name: Main install
        shell: bash -l {0}
        run: |
          conda activate qiita
          pip install . --no-binary redbiom
          pwd
          mkdir ~/.qiita_plugins

      - name: Install plugins
        shell: bash -l {0}
        run: |
          wget https://data.qiime2.org/distro/core/qiime2-2019.4-py36-linux-conda.yml
          conda env create -q -n qtp-biom --file qiime2-2019.4-py36-linux-conda.yml
          rm qiime2-2019.4-py36-linux-conda.yml
          conda activate qtp-biom
          pip install -U pip
          pip install https://github.com/qiita-spots/qiita_client/archive/master.zip
          pip install https://github.com/qiita-spots/qtp-biom/archive/master.zip
          export QIITA_SERVER_CERT=`pwd`/qiita_core/support_files/server.crt
          configure_biom --env-script "conda activate qtp-biom" --server-cert $QIITA_SERVER_CERT

      - name: Starting services
        shell: bash -l {0}
        run: |
          conda activate qiita

          # 1. Setting up redis
          redis-server --daemonize yes --port 7777
          redis-server --daemonize yes --port 6379

          # 2. Starting webdis
          pushd webdis
          ./webdis &
          popd

          # 3. Starting redbiom
          export REDBIOM_HOST=http://127.0.0.1:7379
          curl -s http://127.0.0.1:7379/FLUSHALL > /dev/null
          redbiom --version
          redbiom admin scripts-writable
          redbiom admin create-context --name "qiita-test" --description "qiita-test context"
          redbiom admin load-sample-metadata --metadata `pwd`/qiita_db/support_files/test_data/templates/1_19700101-000000.txt
          redbiom admin load-sample-metadata-search --metadata `pwd`/qiita_db/support_files/test_data/templates/1_19700101-000000.txt
          redbiom admin load-sample-data --table `pwd`/qiita_db/support_files/test_data/processed_data/1_study_1001_closed_reference_otu_table.biom --context qiita-test --tag 4
          redbiom admin load-sample-data --table `pwd`/qiita_db/support_files/test_data/processed_data/1_study_1001_closed_reference_otu_table-for_redbiom_tests.biom --context qiita-test --tag 5

          # 4. Setting up nginx
          nginx -c ${PWD}/qiita_pet/nginx_example.conf

          # 5. setting up qiita
          export QIITA_CONFIG_FP=qiita_core/support_files/config_test.cfg
          qiita-env make --no-load-ontologies
          qiita-test-install
          qiita plugins update

          # 6. Starting supervisord => multiple qiita instances
          supervisord -c ${PWD}/qiita_pet/supervisor_example.conf
          sleep 5
          cat /tmp/supervisord.log

          # Starting plugins :: make sure all the instances are OK
          start_biom https://localhost:8383 register ignored

      - name: Test
        shell: bash -l {0}
        run: |
          export QIITA_CONFIG_FP=qiita_core/support_files/config_test.cfg
          conda activate qiita
          nosetests qiita_db qiita_pet qiita_core qiita_ware --with-doctest --with-coverage --with-timer -v --cover-package=$COVER_PACKAGE -e 'test_submit_EBI_parse_EBI_reply_failure' -e 'test_full_submission'

  qiita-ci-lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: flake8
      uses: actions/setup-python@v2
      with:
        python-version: 3.6
    - name: install dependencies
      run: python -m pip install --upgrade pip
    - name: lint
      run: |
        pip install -q flake8
